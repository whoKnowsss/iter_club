<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iter_club.forum.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.iter_club.forum.entity.Message">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="href" jdbcType="VARCHAR" property="href" />
    <result column="from" jdbcType="VARCHAR" property="from" />
    <result column="to" jdbcType="VARCHAR" property="to" />
    <result column="fromstatus" jdbcType="INTEGER" property="fromstatus" />
    <result column="tostatus" jdbcType="INTEGER" property="tostatus" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="fromname" jdbcType="VARCHAR" property="fromname" />
    <result column="toname" jdbcType="VARCHAR" property="toname" />
    <result column="read" jdbcType="INTEGER" property="read" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `time`, content, href, `from`, `to`, fromstatus, tostatus, `type`, fromname, toname,
    `read`, title
  </sql>
  <select id="selectByExample" parameterType="com.iter_club.forum.entity.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.iter_club.forum.entity.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByUser" parameterType="String">
    DELETE from message where `to`=#{userid, jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.iter_club.forum.entity.Message">
    insert into message (id, `time`, content,
      href, `from`, `to`, fromstatus,
      tostatus, `type`, fromname,
      toname, `read`, title
      )
    values (#{id,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{href,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR}, #{to,jdbcType=VARCHAR}, #{fromstatus,jdbcType=INTEGER}, 
      #{tostatus,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{fromname,jdbcType=VARCHAR}, 
      #{toname,jdbcType=VARCHAR}, #{read,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iter_club.forum.entity.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="href != null">
        href,
      </if>
      <if test="from != null">
        `from`,
      </if>
      <if test="to != null">
        `to`,
      </if>
      <if test="fromstatus != null">
        fromstatus,
      </if>
      <if test="tostatus != null">
        tostatus,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="fromname != null">
        fromname,
      </if>
      <if test="toname != null">
        toname,
      </if>
      <if test="read != null">
        `read`,
      </if>
      <if test="title != null">
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        #{href,jdbcType=VARCHAR},
      </if>
      <if test="from != null">
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        #{to,jdbcType=VARCHAR},
      </if>
      <if test="fromstatus != null">
        #{fromstatus,jdbcType=INTEGER},
      </if>
      <if test="tostatus != null">
        #{tostatus,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="fromname != null">
        #{fromname,jdbcType=VARCHAR},
      </if>
      <if test="toname != null">
        #{toname,jdbcType=VARCHAR},
      </if>
      <if test="read != null">
        #{read,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iter_club.forum.entity.MessageExample" resultType="java.lang.Integer">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.href != null">
        href = #{record.href,jdbcType=VARCHAR},
      </if>
      <if test="record.from != null">
        from = #{record.from,jdbcType=VARCHAR},
      </if>
      <if test="record.to != null">
        to = #{record.to,jdbcType=VARCHAR},
      </if>
      <if test="record.fromstatus != null">
        fromstatus = #{record.fromstatus,jdbcType=INTEGER},
      </if>
      <if test="record.tostatus != null">
        tostatus = #{record.tostatus,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.fromname != null">
        fromname = #{record.fromname,jdbcType=VARCHAR},
      </if>
      <if test="record.toname != null">
        toname = #{record.toname,jdbcType=VARCHAR},
      </if>
      <if test="record.read != null">
        read = #{record.read,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      href = #{record.href,jdbcType=VARCHAR},
      from = #{record.from,jdbcType=VARCHAR},
      to = #{record.to,jdbcType=VARCHAR},
      fromstatus = #{record.fromstatus,jdbcType=INTEGER},
      tostatus = #{record.tostatus,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      fromname = #{record.fromname,jdbcType=VARCHAR},
      toname = #{record.toname,jdbcType=VARCHAR},
      read = #{record.read,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iter_club.forum.entity.Message">
    update message
    <set>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        href = #{href,jdbcType=VARCHAR},
      </if>
      <if test="from != null">
        from = #{from,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        to = #{to,jdbcType=VARCHAR},
      </if>
      <if test="fromstatus != null">
        fromstatus = #{fromstatus,jdbcType=INTEGER},
      </if>
      <if test="tostatus != null">
        tostatus = #{tostatus,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="fromname != null">
        fromname = #{fromname,jdbcType=VARCHAR},
      </if>
      <if test="toname != null">
        toname = #{toname,jdbcType=VARCHAR},
      </if>
      <if test="read != null">
        read = #{read,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iter_club.forum.entity.Message">
    update message
    set time = #{time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      from = #{from,jdbcType=VARCHAR},
      to = #{to,jdbcType=VARCHAR},
      fromstatus = #{fromstatus,jdbcType=INTEGER},
      tostatus = #{tostatus,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      fromname = #{fromname,jdbcType=VARCHAR},
      toname = #{toname,jdbcType=VARCHAR},
      read = #{read,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>